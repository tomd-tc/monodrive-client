cmake_minimum_required(VERSION 3.10)

project(dev)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

add_executable(camera_sensor camera_sensor.cpp)
add_executable(state_sensor state_sensor.cpp)
add_executable(imu_sensor imu_sensor.cpp)
add_executable(gps_sensor gps_sensor.cpp)
add_executable(radar_sensor radar_sensor.cpp)
add_executable(lidar_sensor lidar_sensor.cpp)
add_executable(semantic_camera_sensor semantic_camera_sensor.cpp)
add_executable(depth_camera_sensor depth_camera_sensor.cpp)
add_executable(scenario_file scenario_file.cpp)
add_executable(occupancy_grid_sensor occupancy_grid_sensor.cpp)
add_executable(semantic_lidar_sensor semantic_lidar_sensor.cpp)
add_executable(ultrasonic_sensor ultrasonic_sensor.cpp)
add_executable(collision_sensor collision_sensor.cpp)
add_executable(replay_dev replay_dev.cpp)
add_executable(sensor_frame_count sensor_frame_count.cpp)
add_executable(sensor_frame_count_fixed sensor_frame_count_fixed.cpp)
add_executable(replay_step_dev replay_step.cpp)
add_executable(rpm_sensor rpm_sensor.cpp)
add_executable(waypoint_sensor waypoint_sensor.cpp)
add_executable(config_export config_export.cpp)

target_link_libraries(camera_sensor monodrive)
target_link_libraries(state_sensor monodrive)
target_link_libraries(imu_sensor monodrive)
target_link_libraries(gps_sensor monodrive)
target_link_libraries(radar_sensor monodrive)
target_link_libraries(lidar_sensor monodrive)
target_link_libraries(semantic_camera_sensor monodrive)
target_link_libraries(depth_camera_sensor monodrive)
target_link_libraries(scenario_file monodrive)
target_link_libraries(occupancy_grid_sensor monodrive)
target_link_libraries(semantic_lidar_sensor monodrive)
target_link_libraries(ultrasonic_sensor monodrive)
target_link_libraries(collision_sensor monodrive)
target_link_libraries(replay_dev monodrive)
target_link_libraries(sensor_frame_count monodrive)
target_link_libraries(sensor_frame_count_fixed monodrive)
target_link_libraries(replay_step_dev monodrive)
target_link_libraries(rpm_sensor monodrive)
target_link_libraries(waypoint_sensor monodrive)
target_link_libraries(config_export monodrive)

include_directories(${EIGEN3_INCLUDE_DIR})

find_package(OpenCV REQUIRED PATHS "C:/local/opencv/build" "C:/opencv/build")
include_directories(${OpenCV_INCLUDE_DIRS})

target_include_directories(camera_sensor PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(camera_sensor ${OpenCV_LIBRARIES})
target_link_libraries(camera_sensor ${OpenCV_LIBRARIES})

target_include_directories(semantic_camera_sensor PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(semantic_camera_sensor ${OpenCV_LIBRARIES})
target_link_libraries(semantic_camera_sensor ${OpenCV_LIBRARIES})

target_include_directories(depth_camera_sensor PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(depth_camera_sensor ${OpenCV_LIBRARIES})
target_link_libraries(depth_camera_sensor ${OpenCV_LIBRARIES})

target_include_directories(scenario_file PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(scenario_file ${OpenCV_LIBRARIES})
target_link_libraries(scenario_file ${OpenCV_LIBRARIES})

target_include_directories(occupancy_grid_sensor PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(occupancy_grid_sensor ${OpenCV_LIBRARIES})
target_link_libraries(occupancy_grid_sensor ${OpenCV_LIBRARIES})

target_include_directories(replay_dev PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(replay_dev ${OpenCV_LIBRARIES})
target_link_libraries(replay_dev ${OpenCV_LIBRARIES})

target_include_directories(sensor_frame_count PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(sensor_frame_count ${OpenCV_LIBRARIES})
target_link_libraries(sensor_frame_count ${OpenCV_LIBRARIES})

target_include_directories(sensor_frame_count_fixed PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(sensor_frame_count_fixed ${OpenCV_LIBRARIES})
target_link_libraries(sensor_frame_count_fixed ${OpenCV_LIBRARIES})

target_include_directories(replay_step_dev PUBLIC ${OpenCV_INCLUDE_DIRS})
link_libraries(replay_step_dev ${OpenCV_LIBRARIES})
target_link_libraries(replay_step_dev ${OpenCV_LIBRARIES})
